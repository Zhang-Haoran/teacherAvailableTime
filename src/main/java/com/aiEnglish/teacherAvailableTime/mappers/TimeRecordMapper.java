package com.aiEnglish.teacherAvailableTime.mappers;import com.aiEnglish.teacherAvailableTime.dtos.timeRecord.TimeRecordGetDto;import com.aiEnglish.teacherAvailableTime.dtos.timeRecord.TimeRecordPostDto;import com.aiEnglish.teacherAvailableTime.dtos.timeRecord.TimeRecordPutDto;import com.aiEnglish.teacherAvailableTime.entities.TimeRecord;import org.mapstruct.Mapper;import org.mapstruct.Mapping;import org.mapstruct.MappingTarget;import org.mapstruct.ReportingPolicy;import java.util.List;@Mapper(componentModel = "spring", unmappedSourcePolicy = ReportingPolicy.IGNORE)public interface TimeRecordMapper {    @Mapping(target = "teacher.id", source = "teacher")    TimeRecord toEntity(TimeRecordPostDto timeRecordPostDto);    @Mapping(target = "teacher", source = "teacher.id")    @Mapping(target = "teacher_name", source = "teacher.name")    TimeRecordGetDto fromEntity(TimeRecord timeRecord);    @Mapping(target = "teacher", source = "teacher.id")    @Mapping(target = "teacher_name", source = "teacher.name")    List<TimeRecordGetDto> fromEntities(List<TimeRecord> timeRecords);    @Mapping(target = "teacher.id", source = "teacher")    void copy(TimeRecordPutDto timeRecordPutDto, @MappingTarget TimeRecord timeRecord);}